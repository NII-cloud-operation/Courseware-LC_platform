#!/bin/bash

source "$(dirname $(readlink -f "$0"))/bashsteps-bash-utils-jan2017.source" || exit

existing_dir="$1"
path_to_ubuntu_image="$2"

eval_iferr_exit 'path_to_ubuntu_image="$(readlink -f "$path_to_ubuntu_image")"'

# The next parameter required, but may be an empty string to signify to build a "main" JupyterHub environmnet.
main_build_dir="$3"

shift 3
ip_array=( "$@" )
for ip in "${ip_array[@]}"; do
    [ "${ip//[0-9]}" = "..." ] || iferr_exit "Parameter ($ip) is not a valid IP4 address"
done


thisfile="${0##*/}"
mainscript="${thisfile%-new}"

existing_directory_for_datadir()
{
    ## If this file's name is the main script's filename + "-new", then
    ## the following lines of code should be reusable:
    [ "$thisfile" != "$mainscript" ] || iferr_exit 'required filename pattern not followed'
    [ "$existing_dir" != "" ] || iferr_exit "First parameter should be the emacs build directory"
    [ -f "$existing_dir/datadir.conf" ] || iferr_exit "Second parameter should be existing datadir"
    eval_iferr_exit 'DATADIR="$(readlink -f "$existing_dir")"'
    ln -s "$ORGCODEDIR/$mainscript" "$existing_dir" || iferr_exit "ln to $mainscript"
}
existing_directory_for_datadir

eval_iferr_exit 'source "$DATADIR/datadir.conf"'

[ "$nodecount" -gt 0 ] && [ "$nodecount" -lt 20 ] || iferr_exit "Invalid nodecount in datadir.conf"
[ "${#ip_array[@]}" -eq $((nodecount + 2)) ] || iferr_exit "Number of IP addresses on command line does not match number of nodes plus two"

# Deal with the details that depend on whether this is a "main" jupterhub environment
# with it's own jhvmdir VM, or a "subordinate" jupterhub environment that uses an
# already existing  jhvmdir VM.
if [ "$mainbuilddir" = "" ]; then
    # It will be a "main" jupterhub environment
    randomport="$(( 5000 + ( $RANDOM % 5000 ) ))"
    mcport="$randomport"
    ansible_path="/home/ubuntu"  # put the "main" environment jupyterhub-deploy in the jhvmdir home dir
else
    # It will be a "subordinate" jupterhub environment
    # So use the same mcast port as the "main" jupterhub environment.
    mcport="$(source "$mainbuilddir/jhvmdir/datadir.conf" ; echo "$mcastPORT")"
    # And put things in a directory named after the build directory.
    lasttoken="${DATADIR##*/}"
    ansible_path="/home/ubuntu/subs/$lasttoken"  # the path inside the jhvmdir VM
    : # TODO: make sure there are no obvious problems with the parameters
fi

ipindex=0

for i in $vmdir_list; do
    IP="${ip_array[ipindex++]}"
    # Assuming all VMs are on the same /24 subnet, the last octet
    # is enough to make the MAC addresses unique
    lastoctet="${IP##*.}"
    inhex="$(printf "%02x" "$lastoctet")"
    case "$i" in
	jhvmdir)
	    # these settings are ignored for "subordinate" jupterhub environments
	    imagepath="$path_to_ubuntu_image"
	    MAC=52:54:00:12:$inhex:99
	    ;;
	jhvmdir-hub)
	    imagepath="$DATADIR/jhvmdir/ubuntu-before-nbgrader.tar.gz"
	    MAC=52:54:00:12:$inhex:88
	    ;;
	jhvmdir-node*)
	    imagepath="$DATADIR/jhvmdir/ubuntu-before-nbgrader.tar.gz"
	    n="${i#*-node}"
	    nn="$(printf "%02d" "$n")"
	    MAC=52:54:00:12:$inhex:$nn
	    ;;
    esac
    if [ "$i" = "jhvmdir" ] && [ "$mainbuilddir" != "" ]; then
	ln -s "$mainbuilddir/jhvmdir" "$DATADIR/$i"
    else
	# Make one of the build directories of the VMs (including jhvmdir if
	# this is a "main" jupterhub environment.)
	"$ORGCODEDIR/../kvmsteps/kvmsteps.sh-new" "$DATADIR/$i" "$imagepath" OK || iferr_exit
	cat >>"$DATADIR/$i/datadir.conf" <<EOF || iferr_exit "datadir.conf init failed for $i"
# Not all of these are used on every VM
export EXTRAHOSTFWDREL=""

# port 22 is already assigned by kvmsteps
EXTRAHOSTFWDREL=\$EXTRAHOSTFWDREL,hostfwd=tcp::43-$IP:443
EXTRAHOSTFWDREL=\$EXTRAHOSTFWDREL,hostfwd=tcp::80-$IP:80
EXTRAHOSTFWDREL=\$EXTRAHOSTFWDREL,hostfwd=tcp::81-$IP:8001
EXTRAHOSTFWDREL=\$EXTRAHOSTFWDREL,hostfwd=tcp::83-$IP:8000
EXTRAHOSTFWDREL=\$EXTRAHOSTFWDREL,hostfwd=tcp::84-$IP:8888
EXTRAHOSTFWDREL=\$EXTRAHOSTFWDREL,hostfwd=tcp::90-$IP:9000

export VMIP="$IP"
export mcastMAC="$MAC"
export mcastPORT="$mcport"
EOF
    fi
done

cat  >>"$DATADIR/datadir.conf" <<EOF || iferr_exit "datadir.conf init failed for whole environment"
ansible_path="$ansible_path"
EOF

echo "Success"
