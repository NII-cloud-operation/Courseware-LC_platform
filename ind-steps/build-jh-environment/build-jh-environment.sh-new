#!/bin/bash

source "$(dirname $(readlink -f "$0"))/bashsteps-bash-utils-jan2017.source" || exit

new_dir="$1"

: "${nodecount:=2}"

thisfile="${0##*/}"
mainscript="${thisfile%-new}"

standard_datadir_setup()
{
    ## If this file's name is the main script's filename + "-new", then
    ## the following lines of code should be reusable:
    [ "$thisfile" != "$mainscript" ] || iferr_exit 'required filename pattern not followed'
    [ "$new_dir" != "" ] || iferr_exit "First parameter should be the emacs build directory"
    [ -d "$new_dir" ] && just_exit "$new_dir already exists"
    eval_iferr_exit 'mkdir -p "$new_dir"'
    eval_iferr_exit 'DATADIR="$(readlink -f "$new_dir")"'
    ln -s "$ORGCODEDIR/$mainscript" "$new_dir" || iferr_exit "ln to $mainscript"
}
standard_datadir_setup

node_list="$(for i in $(seq 1 $nodecount) ; do echo -n " node$i" ; done)"
node_list="${node_list# }"
vmdirlist="$(for i in $(seq 1 $nodecount) ; do echo -n " jhvmdir-node$i" ; done)"
vmdirlist="jhvmdir jhvmdir-hub $vmdirlist"

cat  >>"$DATADIR/datadir.conf" <<EOF || iferr_exit "datadir.conf init failed for whole environment"
node_list="$node_list"
vmdirlist="$vmdirlist"
nodecount="$nodecount"

# Defaults commit to use for each build repository.  Can be set to
# "unchanged" to use the commit currently checkout in the repo-cache
# directory, which for fresh clones will normally be the lastest in
# the master branch. (- characters must be changed to _ in the repo name)
# (commit ids must include at least the first 7 hex digits)

setcommit_jh_jupyterhub="6078b8d9e5576cd14eb2d76d8efbe83685f72beb"
# TODO: debug why later jupyterhub commits break the system

setcommit_dockerspawner="unchanged"
setcommit_docker_stacks="eb70bcf1a2927f259472dca911a4b12e0529ac46"  # TODO: temp fix
setcommit_jupyterhub="unchanged"
setcommit_jupyterhub_deploy="unchanged"
setcommit_restuser="unchanged"
setcommit_systemuser="unchanged"
EOF

# Actually put this debugging script in the directory, not its symbolic link.
cat >"$DATADIR/simpleinit.sh" <<EOF
# This script is to make it easy to run jupyterhub environments outside
# of the active-hubs/00* setup.
echo none >"\$(dirname "\$0")/hubid"
'$ORGCODEDIR/../../bin/multihubctl' simpleinit "\$(dirname "\$0")"
EOF
chmod +x "$DATADIR/simpleinit.sh" 

# make all of the reset scripts callable through the build directory
for i in "$ORGCODEDIR/reset-scripts"/reset*.sh ; do
    ln -s "$i" "$DATADIR"
done

echo "Success"
echo "Note, the VM directories still need to be created inside .../${DATADIR##*/}"

