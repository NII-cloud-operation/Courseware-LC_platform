#!/bin/bash

source "$(dirname $(readlink -f "$0"))/bashsteps-bash-utils-jan2017.source" || exit

new_dir="$1"

: "${nodecount:=2}"

thisfile="${0##*/}"
mainscript="${thisfile%-new}"

standard_datadir_setup()
{
    ## If this file's name is the main script's filename + "-new", then
    ## the following lines of code should be reusable:
    [ "$thisfile" != "$mainscript" ] || iferr_exit 'required filename pattern not followed'
    [ "$new_dir" != "" ] || iferr_exit "First parameter should be the emacs build directory"
    [ -d "$new_dir" ] && just_exit "$new_dir already exists"
    eval_iferr_exit 'mkdir -p "$new_dir"'
    eval_iferr_exit 'DATADIR="$(readlink -f "$new_dir")"'
    ln -s "$ORGCODEDIR/$mainscript" "$new_dir" || iferr_exit "ln to $mainscript"
}
standard_datadir_setup

node_list="$(for i in $(seq 1 $nodecount) ; do echo -n " node$i" ; done)"

cat  >>"$DATADIR/datadir.conf" <<EOF || iferr_exit "datadir.conf init failed for whole environment"
node_list="${node_list# }"
EOF

# Actually put this debugging script in the directory, not its symbolic link.
cat >"$DATADIR/simpleinit.sh" <<EOF
'$ORGCODEDIR/../../bin/multihubctl' simpleinit "$(dirname "$0")"
EOF
chmod +x "$DATADIR/simpleinit.sh" 

echo "Success"
echo "Note, the VM directories still need to be created inside .../${DATADIR##*/}"

