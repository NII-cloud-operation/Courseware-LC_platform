#!/bin/bash

source "$(dirname $(readlink -f "$0"))/bashsteps-bash-utils-jan2017.source" || exit

new_dir="$1"
bridge_param="$2"

[ "$bridge_param" != "" ] ; iferr_exit "Second parameter must be the name of an existing bridge"

# TODO: decide the best way to configure node count and the VM ip addresses
defaultip=( 192.168.33.{99,88,11,12} )
: "${nodecount:=2}"
: "${ipaddresses:=${defaultip[*]}}"

: "${mainbuilddir:=}"  # default to empty string, which means to build a "main" jupyterhub environmnet

# mainbuilddir is put in datadir.conf by
# build-jh-environment.sh-new. It is used by
# build-jh-environment.sh-new and various other *vm-setup.sh-new
# scripts to set up reuse of the main ansible VM (and the docker
# images inside) of another jupyterhub environment.

# catch this early, otherwise the cleanup below will delete the existing dir
[ -d "$new_dir" ] && just_exit "$new_dir already exists"

( # --this is just a subprocess, not a step--
    # (1) First, create the new build directory minus the VM directories
    "$ORGCODEDIR/build-jh-environment.sh-new" "$new_dir"
    iferr_exit
    
    thisfile="${0##*/}"
    mainscript="${thisfile%-new}"
    ln -s "$ORGCODEDIR/$mainscript" "$new_dir" || iferr_exit "ln to $mainscript"

    # (2) Then put in the VM directories, which in this case are for KVM, using mcast networking
    "$ORGCODEDIR/kvm-tap-vm-setup.sh-new" \
	"$new_dir" \
	~/ubuntu-image-resources/ubuntu-14-instance-build.img-sshkeys-update-upgrade.tar.gz \
	"$bridge_param" $ipaddresses
    iferr_exit

    # this variable at the top level will be referenced when creating and restoring snapshots
    echo "export bridgeNAME=\"$bridge_param\"" >>"$new_dir/datadir.conf"
) || {
    # clean up if error
    rm -fr "$new_dir"
}
