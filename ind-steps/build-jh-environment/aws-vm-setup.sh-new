#!/bin/bash

source "$(dirname $(readlink -f "$0"))/bashsteps-bash-utils-jan2017.source" || exit

existing_dir="$1"

thisfile="${0##*/}"
mainscript="${thisfile%-new}"

existing_directory_for_datadir()
{
    ## If this file's name is the main script's filename + "-new", then
    ## the following lines of code should be reusable:
    [ "$thisfile" != "$mainscript" ] || iferr_exit 'required filename pattern not followed'
    [ "$existing_dir" != "" ] || iferr_exit "First parameter should be the emacs build directory"
    [ -f "$existing_dir/datadir.conf" ] || iferr_exit "Second parameter should be existing datadir"
    eval_iferr_exit 'DATADIR="$(readlink -f "$existing_dir")"'
    ln -s "$ORGCODEDIR/$mainscript" "$existing_dir" || iferr_exit "ln to $mainscript"
}
existing_directory_for_datadir

eval_iferr_exit 'source "$DATADIR/datadir.conf"'

[ "$nodecount" -gt 0 ] && [ "$nodecount" -lt 20 ] || iferr_exit "Invalid nodecount in datadir.conf"


vpcname="${DATADIR##*/}"

"$ORGCODEDIR/../aws-vpc-proxy/aws-vpc-proxy.sh-new" "$DATADIR/vpcproxy" "$vpcname"

for i in "$vmdir_list"; do
    "$ORGCODEDIR/../aws-vpc-proxy/aws-instance-proxy.sh-new" "$DATADIR/$i" "$DATADIR/vpcproxy" || iferr_exit
    ln -s vpc-datadir/sshkey "$DATADIR/$i/sshkey"
    cat >>"$DATADIR/$i/datadir.conf" <<EOF || iferr_exit "datadir.conf init failed for $i"
EOF
done

echo "Success"
