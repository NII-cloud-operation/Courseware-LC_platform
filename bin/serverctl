#!/bin/bash

reportfailed()
{
    echo "Script failed...exiting. ($*)" 1>&2
    exit 255
}

usage()
{
    cat <<EOF
Usage:

./bin/serverctl list                         ## List servers
./bin/serverctl allow-sudo {server_name}   ## Give sudo powers

EOF
}

export ORGCODEDIR="$(cd "$(dirname $(readlink -f "$0"))" && pwd -P)" || reportfailed

rootdir="${ORGCODEDIR%/*}"
ahdir="$rootdir/active-hubs"
[ -d "$ahdir" ] || mkdir "$ahdir" || reportfailed


get_container_names()
{
    nodename="$1"
    read ln # skip first line
    while read -a allwords; do
	lastword="${allwords[@]: -1}"
	echo "$lastword ($nodename)"
    done
}

do_list()
{
    hubid="$1"
    result="$(grep -HFx "$hubid" "$ahdir"/*/hubid)"
    # result is something like: active-hubs/002/hubid:class4
    [ "$result" = "" ] && reportfailed "Hub with name '$hubid' not found"
    "${result%/hubid*}"/jhvmdir-node1/ssh-to-kvm.sh -q sudo docker ps -a | get_container_names node1
    "${result%/hubid*}"/jhvmdir-node2/ssh-to-kvm.sh -q sudo docker ps -a | get_container_names node2
}

cmd="$1"
shift

case "$cmd" in
    list)
	do_list "$@"
	 ;;
    allow-sudo)
	cmd='head -v "$ahdir"/*/hubid*'
	echo "$cmd"
	eval "$cmd"
	 ;;
    *) usage
       ;;
esac
