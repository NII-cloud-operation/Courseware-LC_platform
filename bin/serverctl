#!/bin/bash

reportfailed()
{
    echo "Script failed...exiting. ($*)" 1>&2
    exit 255
}

usage()
{
    cat <<EOF
Usage:

./bin/serverctl list {hubid}                       ## List servers
./bin/serverctl allow-sudo {hubid} {server_name}   ## Give sudo powers

EOF
}

export ORGCODEDIR="$(cd "$(dirname $(readlink -f "$0"))" && pwd -P)" || reportfailed

rootdir="${ORGCODEDIR%/*}"
ahdir="$rootdir/active-hubs"
[ -d "$ahdir" ] || mkdir "$ahdir" || reportfailed

node_list="node1 node2"

classid_to_hubpath()
{
    local hubid="$1"
    result="$(grep -HFx "$hubid" "$ahdir"/*/hubid)"
    [ "$result" = "" ] && reportfailed "Hub with name '$hubid' not found"
    # result is something like: active-hubs/002/hubid:class4
    echo "${result%/hubid*}"
}

get_container_names()
{
    annotation="$1"
    read ln # skip first line
    while read -a allwords; do
	lastword="${allwords[@]: -1}"
	echo "$lastword$annotation"
    done
}

do_list()
{
    hubpath="$(classid_to_hubpath "$1")" || exit
    for n in $node_list; do
	"$hubpath"/jhvmdir-${n}/ssh-to-kvm.sh -q sudo docker ps -a | get_container_names " ($n)"
    done
}

do_allow_sudo()
{
    hubpath="$(classid_to_hubpath "$1")" || exit
    servername="$2"
    foundit=false
    for n in $node_list; do
	if "$hubpath"/jhvmdir-${n}/ssh-to-kvm.sh -q sudo docker ps | get_container_names "" | \
		grep -Fx "$servername" 1>/dev/null
	then
	    username="${servername#jupyter-}"
	    "$hubpath"/jhvmdir-${n}/ssh-to-kvm.sh -q sudo docker exec -i "$servername" bash <<EOF
set -e
if grep "$username" /etc/sudoers 1>/dev/null; then
   echo "Sudo already allowed"
else
   echo '$username ALL=(ALL) NOPASSWD: ALL' >>/etc/sudoers
   echo "Sudo is now allowed for $username."
fi
EOF
	    foundit=true
	    break
	fi
    done
    $foundit || reportfailed "container not found or not running"
}

do_stop()
{
    hubpath="$(classid_to_hubpath "$1")" || exit
    servername="$2"
    foundit=false
    for n in $node_list; do
	if "$hubpath"/jhvmdir-${n}/ssh-to-kvm.sh -q sudo docker ps | get_container_names "" | \
		grep -Fx "$servername" 1>/dev/null
	then
	    "$hubpath"/jhvmdir-${n}/ssh-to-kvm.sh -q sudo docker stop "$servername"
	    foundit=true
	    break
	fi
    done
    $foundit || reportfailed "container not found or not running"
}

cmd="$1"
shift

case "$cmd" in
    list)
	do_list "$@"
	 ;;
    stop)
	do_stop "$@"
	 ;;
    allow-sudo)
	do_allow_sudo "$@"
	 ;;
    *) usage
       ;;
esac
